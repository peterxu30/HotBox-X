---
# don't change scale
scale: 40.0 

gameMode: permadeath 
#gameMode doesn't work yet
rewardValue: 1
deathPenalty: 1 
#deathPenalty doesn't work yet
minScore: 0
#minimumScore doesn't work yet

playerSpeed: 6f
playerX: 60f
playerY: 240f

distribution: uniform
normalMean: 1.0
normalSD: 1.0
waveTime: 1200.0

objectWidth: 20f
objectSpeed: 6f
objectSpawnX: 800f


### Config Notes ###
#
## scale #
# Scale to convert meters to pixels.
# Used to convert physics engine calculations into graphics
# Do not change!
#
## gameMode #
# Switch between 'permadeath' and 'penalty' game modes
# Affects obstacle collision behavior
#
## rewardValue #
# Amount each reward is worth
#
## deathPenalty #
# Amount of points lost per collision when playing on 'penalty' mode
#
## minScore #
# Lowest amount of points player can have in 'penalty' mode to keep game from ending.
#
## playerSpeed #
# Vertical velocity given to player on key press.
# playerSpeed * scale = speed in pixels
#
## playerX #
# X-coordinate of the player in pixels.
# Must be between 20 and 780
#
## playerY #
# Starting y-coordinate of the player in pixels.
# 0 is the top of the screen.
# Must be between 60 and 420
#
## distribution #
# The distribution of gaps. (Gaps are spaces between obstacles the player can go through)
# Can be 'uniform' or 'normal'
#
## normalMean #
# mean for normal distribution.
# the game field is divided into 9 spawn zones for objects.
# 9 invisible horizontal lines divide the play area
# 0 is top most spawn line, 8 is bottom most spawn line
# all samples from normal distributions are % 9
# Game is just designed that way.
#
## normalSD #
# standard deviation for normal distribution
# % 9 from normalMean applies to this as well
#
## waveTime #
# The amount of time (in milliseconds) between waves.
# waveTime must end in ".0" for the parser to recognize it as a Double, 
# which is subsequently converted to a long as the parser is unable to recognize
# longs on its own.
#
## objectWidth #
# Width (horizontal measurement) of obstacles in pixels.
#
## objectSpeed #
# Speed objects come at the player.
# objectSpeed * scale = speed in pixels.
#
## objectSpawnX #
# Starting x-coordinate of objects in pixels.